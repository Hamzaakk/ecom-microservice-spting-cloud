spring.application.name=order-service
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/OrderDb?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
server.port=0
eureka.client.serviceUrl.defaultZone =http://localhost:8761/eureka


management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
### CIRCUIT BREAKER
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10
resilience4j.circuitbreaker.instances.inventory.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3

# Time Limiter
resilience4j.timelimiter.instances.inventory.timeoutDuration=5s
resilience4j.retry.instances.inventory.maxAttempts=3
resilience4j.retry.instances.inventory.waitDuration=500ms
### TRACING ZIPKIN

# Enable tracing
management.tracing.enabled=true

# Sampling settings: 100% of the requests will be traced
management.tracing.sampling.probability=1.0

# Zipkin base URL where spans will be reported
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans



# Configuring Brave (which is the tracing implementation used by Micrometer)
spring.sleuth.enabled=true

# Setting how often metrics are sent (in ms)
spring.zipkin.messageTimeout=5000

# Enable async reporting to Zipkin
spring.zipkin.reporter.messageTimeout=5000

# Set the Zipkin reporter compression flag
spring.zipkin.sender.compression-enabled=true
