spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service/
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product/**

spring.cloud.gateway.routes[1].id=inventory-service
spring.cloud.gateway.routes[1].uri=lb://inventory-service/
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/inventory/**

spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://order-service/
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/order/**

# Spring Cloud Gateway configuration
spring.cloud.gateway.routes[3].id=discovery-service
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1


spring.application.name=api-gateway-service
server.port=8088

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Keycloak configuration for Client Credentials grant type

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8888/realms/spring-boot-microservice-realm

### TRACING ZIPKIN
# Enable tracing
management.tracing.enabled=true
# Sampling settings: 100% of the requests will be traced
management.tracing.sampling.probability=1.0
# Zipkin base URL where spans will be reported
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans



# Configuring Brave (which is the tracing implementation used by Micrometer)
spring.sleuth.enabled=true
# Setting how often metrics are sent (in ms)
spring.zipkin.messageTimeout=5000
# Enable async reporting to Zipkin
spring.zipkin.reporter.messageTimeout=5000
# Set the Zipkin reporter compression flag
spring.zipkin.sender.compression-enabled=true
